name: Code Quality & Linting

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  python-lint:
    name: Python Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black ruff mypy
          pip install -r requirements.txt

      - name: Check code formatting with Black
        run: |
          black --check app/ tests/
        continue-on-error: false

      - name: Lint with Ruff
        run: |
          ruff check app/ tests/
        continue-on-error: false

      - name: Type check with mypy
        run: |
          mypy app/ --ignore-missing-imports
        continue-on-error: true

  frontend-lint:
    name: Frontend Code Quality
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

      - name: Check TypeScript types
        run: npx tsc --noEmit
        continue-on-error: false

      - name: Check formatting with Prettier (if configured)
        run: |
          if [ -f ".prettierrc" ] || [ -f "prettier.config.js" ]; then
            npx prettier --check "**/*.{ts,tsx,js,jsx,json,css,md}"
          fi
        continue-on-error: true

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        if: always()

  dependency-check:
    name: Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Check Python dependencies for vulnerabilities
        run: |
          pip install safety
          safety check --file requirements.txt || true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Audit npm dependencies
        working-directory: ./frontend
        run: |
          npm audit --audit-level=moderate || true
